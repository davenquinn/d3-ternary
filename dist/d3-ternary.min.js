// https://github.com/davenquinn/d3-ternary#readme v2.0.0 Copyright 2021 Jules Blom
import{scaleLinear as t}from"d3-scale";import{sum as n}from"d3-array";const{cos:e,sin:r,atan:i,sign:a}=Math,o=t=>new Set(t.map((t=>{const n=Math.round(100*(t[0]+Number.EPSILON))/100,e=Math.round(100*(t[1]+Number.EPSILON))/100;return Math.abs(e-n)}))),c=t=>t>.999999?1:t<1e-6?0:t,l=(t,n,e)=>(n-t)*Math.sign(t)/Math.sqrt(e**2+1),s=(t,n)=>{if(0===t)return[0,-n];return g(-1/t,n)},u=([t,n],[e,r])=>i=>[t+i*(e-t),n+i*(r-n)],g=(t,n)=>{const o=i(t);return[n*e(o)*a(o),n*r(o)*a(o)]},f=([t,n],[e,r])=>(r-n)/(e-t);function k(n){let e=500,r=1,i=0,a=0,g="%",k=!1,m=n.vertices();function d(t){const[r,i]=n(t);return[r*e,i*e]}let[A,h,b]=x(),p={label:"A",labelAngle:0,labelOffset:45,gridLine:u(b,A),gridLineCount:20,scale:t().domain([0,1]),tickAngle:0,tickCount:10,tickSize:6,tickTextAnchor:"start"},L={label:"B",labelAngle:60,labelOffset:45,gridLine:u(A,h),gridLineCount:20,scale:t().domain([0,1]),tickAngle:60,tickCount:10,tickSize:6,tickTextAnchor:"end"},C={label:"C",labelAngle:-60,labelOffset:45,gridLine:u(h,b),gridLineCount:20,scale:t().domain([0,1]),tickAngle:-60,tickCount:10,tickSize:6,tickTextAnchor:"end"};function x(t){if(t){const r=t.map((([t,n])=>[t/e,n/e]));return n.vertices(r),d}return n.vertices().map((([t,n])=>[t*e,n*e]))}return p.conjugate=L,L.conjugate=C,C.conjugate=p,d.vertices=x,d.axisLabels=function({center:t=!1}={}){return[p,L,C].map((n=>{const{label:r,labelAngle:i}=n,[a,o]=n.gridLine(t?.5:1);return{position:[a/e*(e+n.labelOffset),o/e*(e+n.labelOffset)],label:r,angle:i}}))},d.setDomains=function(t){const[n,e,r]=t;return p.scale.domain(n),L.scale.domain(e),C.scale.domain(r),d},d.reverseVertices=function(){k=!0;const t=[b,A,h],[n,e,r]=m;return m=[r,n,e],d.vertices(t),p.gridLine=u(A,b),L.gridLine=u(h,A),C.gridLine=u(b,h),d},d.domains=function(t){if(!arguments.length)return[p.scale.domain(),L.scale.domain(),C.scale.domain()];const n=o(t);if(1!==n.size)throw new Error("Domains must all be of equal length");const e=t.every((t=>t[0]>t[1]));e?d.reverseVertices():k=!1,d.setDomains(t);const{x:r,y:i,k:a}=d.transformFromDomains(t);return d.translate([r,i]),d.scale(a),d},d.gridLines=function(){return[p,L,C].map((t=>t.scale.ticks(t.gridLineCount-1).map((n=>[t.gridLine(t.scale(n)),t.conjugate.gridLine(1-t.scale(n))]))))},d.gridLineCounts=function(t){return arguments.length?Array.isArray(t)?(p.gridLineCount=+t[0],L.gridLineCount=+t[1],C.gridLineCount=+t[2],d):(p.gridLineCount=+t,L.gridLineCount=+t,C.gridLineCount=+t,d):[p.gridLineCount,L.gridLineCount,C.gridLineCount]},d.ticks=function(){return[p,L,C].map((t=>{const n=t.scale.ticks(t.tickCount),e="function"==typeof g?g:t.scale.tickFormat(t.tickCount,g);return n.map((n=>{const r=k?1-t.scale(n):t.scale(n);return{tick:e(n),position:t.gridLine(r),angle:t.tickAngle,size:t.tickSize,textAnchor:t.tickTextAnchor}}))}))},d.tickAngles=function(t){return arguments.length?(p.tickAngle=t[0],L.tickAngle=t[1],C.tickAngle=t[2],d):[p.tickAngle,L.tickAngle,C.tickAngle]},d.tickCounts=function(t){return arguments.length?Array.isArray(t)?(p.tickCount=t[0],L.tickCount=t[1],C.tickCount=t[2],d):(p.tickCount=+t,L.tickCount=+t,C.tickCount=+t,d):[p.tickCount,L.tickCount,C.tickCount]},d.tickSizes=function(t){return arguments.length?Array.isArray(t)?(p.tickSize=t[0],L.tickSize=t[1],C.tickSize=t[2],d):(p.tickSize=L.tickSize=C.tickSize=+t,d):[p.tickSize,L.tickSize,C.tickSize]},d.tickFormat=function(t){return arguments.length?(g=t,d):g},d.tickTextAnchors=function(t){return arguments.length?(p.tickTextAnchor=t[0],L.tickTextAnchor=t[1],C.tickTextAnchor=t[2],d):[p.tickTextAnchor,L.tickTextAnchor,C.tickTextAnchor]},d.labels=function(t){return arguments.length?(p.label=t[0],L.label=t[1],C.label=t[2],d):[p.label,L.label,C.label]},d.labelAngles=function(t){return arguments.length?(p.labelAngle=t[0],L.labelAngle=t[1],C.labelAngle=t[2],d):[p.labelAngle,L.labelAngle,C.labelAngle]},d.labelOffsets=function(t){return arguments.length?(p.labelOffset=t[0],L.labelOffset=t[1],C.labelOffset=t[2],d):[p.labelOffset,L.labelOffset,C.labelOffset]},d.triangle=function(){return`M${A}L${h}L${b}Z`},d.radius=function(t){return arguments.length?(e=+t,[A,h,b]=d.vertices(),p.gridLine=u(b,A),L.gridLine=u(A,h),C.gridLine=u(h,b),d):e},d.scale=function(t){return arguments.length?(r=+t,d.transform(),d):r},d.translate=function(t){return arguments.length?(i=t[0],a=t[1],d.transform(),d):[i,a]},d.invert=function(t){const r=[t[0]/e,t[1]/e];return n.invert(r)},d.transform=function(){if(1===r)return i=0,a=0,d;const[t,e,o]=m,[c,u,g]=m.map((([t,n])=>[t*r+i,n*r+a])),A=f(t,e),h=f(t,o),b=f(e,o),p=c[1]-A*c[0],L=c[1]-h*c[0],C=u[1]-b*u[0],x=l(t[1],L,h),z=l(k?e[1]:t[1],p,A),S=l(e[1],C,b);if(z<-1e-6){const[t,n]=s(A,z);i+=t,a+=n}if(x<-1e-6){const[t,n]=s(h,x);i+=t,a+=n}if(S<-1e-6){const[t,n]=s(b,S);i+=t,a+=n}const v=m.map((([t,n])=>[t*r+i,n*r+a]));return n.vertices(v),d},d.transformFromDomains=function(t){const[n,e,r]=t,i=[...o(t)][0],[a,c,l]=m,s=1/i,u=(t=>(t-1)/(3*t))(s),g=u-n[0],f=u-e[0],k=u-r[0],[d,A]=[a[0]*g+c[0]*f+l[0]*k,a[1]*g+c[1]*f+l[1]*k].map((t=>t*transform.k));return{k:s,x:d,y:A}},d.domainsFromVertices=function(){const[t,e,r]=m.map(n.invert);return[[e[0],t[0]].map(c),[r[1],e[1]].map(c),[t[2],r[2]].map(c)]},d}const{sin:m,cos:d,PI:A}=Math;function h(){const t=A/180;let e=t=>t[0],r=t=>t[1],i=t=>t[2];let[a,o,c]=[-90,150,30].map((n=>[d(n*t),m(n*t)]));function l(t){const a=[e(t),r(t),i(t)],o=n(a);return 0===o?[0,0,0]:a.map((t=>t/o))}const s=function(t){const[n,e,r]=l(t);return[a[0]*n+o[0]*e+c[0]*r,a[1]*n+o[1]*e+c[1]*r]};return s.invert=function([t,n]){const[e,r]=a,[i,l]=o,[s,u]=c,g=l-u,f=s-i,k=e-s,m=t-s,d=n-u,A=g*k+f*(r-u),h=(g*m+f*d)/A,b=((u-r)*m+k*d)/A;return[h,b,1-h-b]},s.a=function(t){return arguments.length?(e=t,s):e},s.b=function(t){return arguments.length?(r=t,s):r},s.c=function(t){return arguments.length?(i=t,s):i},s.normalize=l,s.vertices=function(t){return arguments.length?(a=t[0],o=t[1],c=t[2],s):[a,o,c]},s}const b=(t,n)=>t.selectAll("text").data(n,(t=>t.label)).join((t=>t.append("text").attr("dy",((t,n)=>2===n?"-0.5em":".5em")).attr("transform",((t,n)=>`translate(${t.position})rotate(${t.angle})`)).attr("text-anchor","middle").text((t=>t.label))),(t=>t.attr("transform",((t,n)=>`translate(${t.position})rotate(${t.angle})`)))),p=t=>t.selectAll("g").data((t=>t),(t=>t.tick)).join((t=>{const n=t.append("g").attr("class","tick").attr("transform",(t=>`translate(${t.position})`));return n.append("text").attr("text-anchor",(t=>t.textAnchor)).attr("transform",(t=>`rotate(${t.angle})`)).attr("dx",(t=>(-t.size-5)*("start"===t.textAnchor?-1:1))).attr("dy",".5em").text((t=>t.tick)),n.append("line").attr("transform",(t=>`rotate(${t.angle+90})`)).attr("y2",(t=>t.size*("start"===t.textAnchor?-1:1))).attr("stroke","grey"),n}),(t=>t.attr("transform",(t=>`translate(${t.position})`))),(t=>t.attr("opacity",epsilon).remove())),L=(t,n)=>t.selectAll("path").data(n).join((t=>t.append("path").attr("d",(t=>t)).attr("stroke","#e3e3e3").attr("stroke-width",((t,n)=>1&n?1:2))),(t=>t.attr("d",(t=>t))));export{b as axisLabels,h as barycentric,L as grid,k as ternaryPlot,p as ticks};
