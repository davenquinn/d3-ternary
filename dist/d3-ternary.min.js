// https://github.com/davenquinn/d3-ternary#readme v2.0.0 Copyright 2021 Jules Blom
import{scaleLinear as t}from"d3-scale";import{sum as e}from"d3-array";const{cos:n,sin:r,atan:i,sign:a}=Math,c=t=>new Set(t.map((t=>{const e=Math.round(100*(t[0]+Number.EPSILON))/100,n=Math.round(100*(t[1]+Number.EPSILON))/100;return Math.abs(n-e)}))),l=(t,e)=>{if(0===t)return[0,-e];return m(-1/t,e)},o=([t,e],[n,r])=>i=>[t+i*(n-t),e+i*(r-e)],s=([t,e],[n,r])=>(r-e)/(n-t),u=t=>t>.999999?1:t<1e-6?0:t,f=(t,e,n)=>(e-t)*Math.sign(t)/Math.sqrt(Math.pow(n,2)+1),m=(t,e)=>{const c=i(t);return[e*n(c)*a(c),e*r(c)*a(c)]};function g(e){let n=500,r=1,i=0,a=0,m="%",g=!1,d=e.vertices();function k(t){const[r,i]=e(t);return[r*n,i*n]}function A(t){if(t){const r=t.map((([t,e])=>[t/n,e/n]));return e.vertices(r),k}return e.vertices().map((([t,e])=>[t*n,e*n]))}let[b,p,h]=A(),x={label:"A",labelAngle:0,labelOffset:45,gridLine:o(h,b),scale:t().domain([0,1]),tickAngle:0,tickSize:6,tickTextAnchor:"start",conjugate:null},S={label:"B",labelAngle:60,labelOffset:45,gridLine:o(b,p),scale:t().domain([0,1]),tickAngle:60,tickSize:6,tickTextAnchor:"end",conjugate:null},v={label:"C",labelAngle:-60,labelOffset:45,gridLine:o(p,h),scale:t().domain([0,1]),tickAngle:-60,tickSize:6,tickTextAnchor:"end",conjugate:null};return x.conjugate=S,S.conjugate=v,v.conjugate=x,k.vertices=A,k.axisLabels=function({center:t=!1}={}){return[x,S,v].map((e=>{const{label:r,labelAngle:i}=e,[a,c]=e.gridLine(t?.5:1);return{position:[a/n*(n+e.labelOffset),c/n*(n+e.labelOffset)],label:r,angle:i}}))},k.setDomains=function(t){const[e,n,r]=t;return x.scale.domain(e),S.scale.domain(n),v.scale.domain(r),k},k.reverseVertices=function(){g=!0;const t=[h,b,p],[e,n,r]=d;return d=[r,e,n],k.vertices(t),x.gridLine=o(b,h),S.gridLine=o(p,b),v.gridLine=o(h,p),k},k.domains=function(t){if(!arguments.length)return[x.scale.domain(),S.scale.domain(),v.scale.domain()];const e=c(t);if(1!==e.size)throw new Error("Domains must all be of equal length");const n=t.every((t=>t[0]>t[1]));n?k.reverseVertices():g=!1,k.setDomains(t);const{x:r,y:i,k:a}=k.transformFromDomains(t);return k.translate([r,i]),k.scale(a),k},k.gridLines=function(t=20){return[x,S,v].map(((e,n)=>{const r=Array.isArray(t)?+t[n]:+t;return e.scale.ticks(r-1).map((t=>{var n;return[e.gridLine(e.scale(t)),null===(n=e.conjugate)||void 0===n?void 0:n.gridLine(1-e.scale(t))]}))}))},k.ticks=function(t=10){return[x,S,v].map(((e,n)=>{const r=Array.isArray(t)?+t[n]:+t,i=e.scale.ticks(r),a="function"==typeof m?m:e.scale.tickFormat(r,m);return i.map((t=>{const n=g?1-e.scale(t):e.scale(t);return{tick:a(t),position:e.gridLine(n),angle:e.tickAngle,size:e.tickSize,textAnchor:e.tickTextAnchor}}))}))},k.tickAngles=function(t){return t?(x.tickAngle=t[0],S.tickAngle=t[1],v.tickAngle=t[2],k):[x.tickAngle,S.tickAngle,v.tickAngle]},k.tickSizes=function(t){return t?Array.isArray(t)?(x.tickSize=t[0],S.tickSize=t[1],v.tickSize=t[2],k):(x.tickSize=S.tickSize=v.tickSize=+t,k):[x.tickSize,S.tickSize,v.tickSize]},k.tickFormat=function(t){return t?(m=t,k):m},k.tickTextAnchors=function(t){return t?(x.tickTextAnchor=t[0],S.tickTextAnchor=t[1],v.tickTextAnchor=t[2],k):[x.tickTextAnchor,S.tickTextAnchor,v.tickTextAnchor]},k.labels=function(t){return t?(x.label=String(t[0]),S.label=String(t[1]),v.label=String(t[2]),k):[x.label,S.label,v.label]},k.labelAngles=function(t){return t?(x.labelAngle=t[0],S.labelAngle=t[1],v.labelAngle=t[2],k):[x.labelAngle,S.labelAngle,v.labelAngle]},k.labelOffsets=function(t){return t?(x.labelOffset=t[0],S.labelOffset=t[1],v.labelOffset=t[2],k):[x.labelOffset,S.labelOffset,v.labelOffset]},k.triangle=function(){return`M${b}L${p}L${h}Z`},k.radius=function(t){return t?(n=+t,[b,p,h]=k.vertices(),x.gridLine=o(h,b),S.gridLine=o(b,p),v.gridLine=o(p,h),k):n},k.scale=function(t){return t?(r=+t,k.transform(),k):r},k.translate=function(t){return t?(i=t[0],a=t[1],k.transform(),k):[i,a]},k.invert=function(t){const r=[t[0]/n,t[1]/n];return e.invert(r)},k.transform=function(){if(1===r)return i=0,a=0,k;const[t,n,c]=d,[o,u,m]=d.map((([t,e])=>[t*r+i,e*r+a])),A=s(t,n),b=s(t,c),p=s(n,c),h=o[1]-A*o[0],x=o[1]-b*o[0],S=u[1]-p*u[0],v=f(t[1],x,b),z=f(g?n[1]:t[1],h,A),L=f(n[1],S,p);if(z<-1e-4){const[t,e]=l(A,z);i+=t,a+=e}if(v<-1e-4){const[t,e]=l(b,v);i+=t,a+=e}if(L<-1e-4){const[t,e]=l(p,L);i+=t,a+=e}const[y,O,T]=d,$=([t,e])=>[t*r+i,e*r+a],j=[$(y),$(O),$(T)];return e.vertices(j),k},k.transformFromDomains=function(t){const[e,n,r]=t,i=[...c(t)][0],[a,l,o]=d,s=1/i,u=(t=>(t-1)/(3*t))(s),f=u-e[0],m=u-n[0],g=u-r[0],[k,A]=[a[0]*f+l[0]*m+o[0]*g,a[1]*f+l[1]*m+o[1]*g].map((t=>t*s));return{k:s,x:k,y:A}},k.domainsFromVertices=function(){const[t,n,r]=d.map(e.invert);return[[n[0],t[0]].map(u),[r[1],n[1]].map(u),[t[2],r[2]].map(u)]},k}function d(){const{sin:t,cos:n,PI:r}=Math,i=r/180;let a=t=>t[0],c=t=>t[1],l=t=>t[2];let[o,s,u]=[-90,150,30].map((e=>[n(e*i),t(e*i)]));function f(t){const n=[a(t),c(t),l(t)],r=e(n);return 0===r?[0,0,0]:n.map((t=>t/r))}const m=function(t){const[e,n,r]=f(t);return[o[0]*e+s[0]*n+u[0]*r,o[1]*e+s[1]*n+u[1]*r]};return m.invert=function([t,e]){const[n,r]=o,[i,a]=s,[c,l]=u,f=a-l,m=c-i,g=n-c,d=t-c,k=e-l,A=f*g+m*(r-l),b=(f*d+m*k)/A,p=((l-r)*d+g*k)/A;return[b,p,1-b-p]},m.a=function(t){return t?(a=t,m):a},m.b=function(t){return t?(c=t,m):c},m.c=function(t){return t?(l=t,m):l},m.normalize=f,m.vertices=function(t){return t?(o=t[0],s=t[1],u=t[2],m):[o,s,u]},m}d();const k=(t,e)=>t.selectAll("text").data(e,(t=>t.label)).join((t=>t.append("text").attr("dy",((t,e)=>2===e?"-0.5em":".5em")).attr("transform",((t,e)=>`translate(${t.position})rotate(${t.angle})`)).attr("text-anchor","middle").text((t=>t.label))),(t=>t.attr("transform",((t,e)=>`translate(${t.position})rotate(${t.angle})`)))),A=t=>t.selectAll("g").data((t=>t),(t=>t.tick)).join((t=>{const e=t.append("g").attr("class","tick").attr("transform",(t=>`translate(${t.position})`));return e.append("text").attr("text-anchor",(t=>t.textAnchor)).attr("transform",(t=>`rotate(${t.angle})`)).attr("dx",(t=>(-t.size-5)*("start"===t.textAnchor?-1:1))).attr("dy",".5em").text((t=>t.tick)),e.append("line").attr("transform",(t=>`rotate(${t.angle+90})`)).attr("y2",(t=>t.size*("start"===t.textAnchor?-1:1))).attr("stroke","grey"),e}),(t=>t.attr("transform",(t=>`translate(${t.position})`))),(t=>t.attr("opacity",epsilon).remove())),b=(t,e)=>t.selectAll("path").data(e).join((t=>t.append("path").attr("d",(t=>t)).attr("stroke","#e3e3e3").attr("stroke-width",((t,e)=>1&e?1:2))),(t=>t.attr("d",(t=>t))));export{k as axisLabels,d as barycentric,b as grid,g as ternaryPlot,A as ticks};
